@inherits BaseRealEstateCard
@inject IJSRuntime JsRuntime

<div class="card shadow">
    @*Carousel images*@
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            @for (int i = 0; i < RealEstate.Urls.Count; i++)
            {
                @if (i == 0)
                {
                    <li data-target="#carouselExampleIndicators" data-slide-to="i" class="active"></li>
                }
                else
                {
                    <li data-target="#carouselExampleIndicators" data-slide-to="i"></li>
                }
            }
        </ol>
        <div class="carousel-inner w-auto image-slider">
            @for (int i = 0; i < RealEstate.Urls.Count; i++)
            {
                if (i == 0)
                {
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="@RealEstate.Urls[i].Url.ToString()" />
                    </div>
                }
                else
                {
                    <div class="carousel-item">
                        <img class="d-block w-100" src="@RealEstate.Urls[i].Url.ToString()" />
                    </div>
                }
            }
        </div>
        <a id="carousel-prev" class="carousel-control-prev" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a id="carousel-next" class="carousel-control-next" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
    @*Card body address and price*@
    <div class="card-body">
        <div class="row border-bottom">
            <div class="col-12">
                <h2 class="card-title">@RealEstate.Address<span class="text-muted font-weight-lighter" style="font-size: 0.6em">, @RealEstate.City</span></h2>
            </div>
        </div>
    </div>
    @*Card body Description*@
    <div class="card-body">
        <div class="row">
            @*Real estate description*@
            <div class="col-sm-6">
                <p>@RealEstate.Description</p>
            </div>
            @*Real estate facts table*@
            <div class="border-left col-sm border-top-0">
                <table class="table table-hover table-borderless">
                    <tbody>
                        <tr>
                            <th scope="row">Real estate type:</th>
                            <td>@Enum.GetName(typeof(RealEstateTypes), RealEstate.RealEstateType)</td>
                        </tr>
                        <tr>
                            <th scope="row">Appeared on market:</th>
                            <td>@RealEstate.CreatedOn</td>
                        </tr>
                        <tr>
                            <th scope="row">Construction year:</th>
                            <td>@RealEstate.ConstructionYear</td>
                        </tr>
                        <tr>
                            <th scope="row">Rent per month:</th>
                            <td>@(RealEstate.CanBeRented ? string.Format("{0:N} kr", @RealEstate.RentingPrice) : "Not for Rent")</td>
                        </tr>
                        <tr>
                            <th scope="row">Starting bid:</th>
                            <td>@(RealEstate.CanBeSold ? string.Format("{0:N} kr", @RealEstate.SellingPrice) : "Not for Sale")</td>
                        </tr>
                        <tr>
                            <th scope="row">Rooms:</th>
                            <td>@RealEstate.Rooms</td>
                        </tr>
                        <tr>
                            <th scope="row">Square meters:</th>
                            <td>@RealEstate.SquareMeters</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    protected async override Task OnAfterRenderAsync(bool firstRender)
        {
            firstRender = true;

            if (firstRender)
            {
                await JsRuntime.InvokeAsync<object>("initializeCarousel");
                firstRender = false;
            }

        }
}
